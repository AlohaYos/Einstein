// ==============================
// File:			TFLSettings
// Project:			Einstein
//
// Copyright 2003-2007 by Paul Guyot (pguyot@kallisys.net).
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program; if not, write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
// ==============================
// $Id$
// ==============================

// generated by Fast Light User Interface Designer (fluid) version 1.0400

#ifndef TFLSettingsUI_h
#define TFLSettingsUI_h
#include <FL/Fl.H>
class TFLApp;
#include "TFLSettings.h"
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Menu_Button.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Output.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Int_Input.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Browser.H>
#include <FL/Fl_Menu_Bar.H>
extern void cb_New(Fl_Menu_*, long);
#include <FL/Fl_Input_Choice.H>

class TFLSettingsUI : public TFLSettings {
public:
  TFLSettingsUI();
  Fl_Double_Window* CreateSettingsPanel();
private:
  inline void cb_Einstein_i(Fl_Double_Window*, void*);
  static void cb_Einstein(Fl_Double_Window*, void*);
public:
  Fl_Menu_Button *RMB;
  static Fl_Menu_Item menu_RMB[];
private:
  inline void cb_Install_i(Fl_Menu_*, void*);
  static void cb_Install(Fl_Menu_*, void*);
  inline void cb_Backlight_i(Fl_Menu_*, void*);
  static void cb_Backlight(Fl_Menu_*, void*);
  inline void cb_Settings_i(Fl_Menu_*, void*);
  static void cb_Settings(Fl_Menu_*, void*);
  inline void cb_About_i(Fl_Menu_*, void*);
  static void cb_About(Fl_Menu_*, void*);
  inline void cb_Power_i(Fl_Menu_*, void*);
  static void cb_Power(Fl_Menu_*, void*);
public:
  Fl_Input *wMPConfigName;
  Fl_Button *wMPConfigMenuButton;
  Fl_Button *wMPConfigAddButton;
  Fl_Button *wMPConfigRemoveButton;
  Fl_Output *wROMName;
  Fl_Box *wROMPath;
  Fl_Box *wROMDetails;
  Fl_Button *wROMPathChoose;
private:
  inline void cb_wROMPathChoose_i(Fl_Button*, void*);
  static void cb_wROMPathChoose(Fl_Button*, void*);
public:
  Fl_Output *wFlashName;
  Fl_Box *wFlashPath;
  Fl_Button *wFlashPathCreate;
private:
  inline void cb_wFlashPathCreate_i(Fl_Button*, void*);
  static void cb_wFlashPathCreate(Fl_Button*, void*);
public:
  Fl_Button *wFlashPathChoose;
private:
  inline void cb_wFlashPathChoose_i(Fl_Button*, void*);
  static void cb_wFlashPathChoose(Fl_Button*, void*);
public:
  Fl_Choice *wRAMSizeChoice;
  static Fl_Menu_Item menu_wRAMSizeChoice[];
  static Fl_Menu_Item menu_User[];
  Fl_Box *wRestartWarning;
  Fl_Int_Input *wWidth;
  Fl_Int_Input *wHeight;
  Fl_Check_Button *wFullScreen;
  Fl_Check_Button *wHideMouse;
  Fl_Check_Button *wLaunchMonitorAtBoot;
  Fl_Check_Button *wBreatAtROMBoot;
  Fl_Input *wUIConfigName;
  Fl_Button *wUIConfigMenuButton;
  Fl_Button *wUIConfigAddButton;
  Fl_Button *wUIConfigRemoveButton;
  Fl_Browser *wPCCardList;
private:
  inline void cb_wPCCardList_i(Fl_Browser*, void*);
  static void cb_wPCCardList(Fl_Browser*, void*);
  static Fl_Menu_Item menu_[];
  inline void cb_Add_i(Fl_Menu_*, void*);
  static void cb_Add(Fl_Menu_*, void*);
  inline void cb_New_i(Fl_Menu_*, long);
  static void cb_New(Fl_Menu_*, long);
  inline void cb_Create_i(Fl_Menu_*, void*);
  static void cb_Create(Fl_Menu_*, void*);
public:
  Fl_Button *wPCCardListRemove;
private:
  inline void cb_wPCCardListRemove_i(Fl_Button*, void*);
  static void cb_wPCCardListRemove(Fl_Button*, void*);
public:
  Fl_Button *wPCCardMoveUp;
private:
  inline void cb_wPCCardMoveUp_i(Fl_Button*, void*);
  static void cb_wPCCardMoveUp(Fl_Button*, void*);
public:
  Fl_Button *wPCCardMoveDown;
private:
  inline void cb_wPCCardMoveDown_i(Fl_Button*, void*);
  static void cb_wPCCardMoveDown(Fl_Button*, void*);
  static Fl_Menu_Item menu_1[];
public:
  static Fl_Menu_Item *wPCCardEditName;
private:
  inline void cb_wPCCardEditName_i(Fl_Menu_*, void*);
  static void cb_wPCCardEditName(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *wPCCardEditTag;
private:
  inline void cb_wPCCardEditTag_i(Fl_Menu_*, void*);
  static void cb_wPCCardEditTag(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *wPCCardEditPath;
private:
  inline void cb_wPCCardEditPath_i(Fl_Menu_*, void*);
  static void cb_wPCCardEditPath(Fl_Menu_*, void*);
  static Fl_Menu_Item menu_United[];
  static Fl_Menu_Item menu_local[];
  static Fl_Menu_Item menu_Pawels[];
  static Fl_Menu_Item menu_MessagePad[];
public:
  Fl_Check_Button *wDontShow;
  Fl_Button *wQuit;
private:
  inline void cb_wQuit_i(Fl_Button*, void*);
  static void cb_wQuit(Fl_Button*, void*);
public:
  Fl_Button *wStart;
private:
  inline void cb_wStart_i(Fl_Button*, void*);
  static void cb_wStart(Fl_Button*, void*);
public:
  Fl_Button *wRevert;
private:
  inline void cb_wRevert_i(Fl_Button*, void*);
  static void cb_wRevert(Fl_Button*, void*);
public:
  Fl_Button *wSave;
private:
  inline void cb_wSave_i(Fl_Button*, void*);
  static void cb_wSave(Fl_Button*, void*);
public:
  void updateMenus();
  void revertDialog();
  void applyDialog();
  void runningMode();
private:
  void close_window_cb(Fl_Widget*, void *user);
public:
  Fl_Double_Window* createAboutDialog();
  Fl_Double_Window *wAbout;
private:
  inline void cb_wAbout_i(Fl_Double_Window*, void*);
  static void cb_wAbout(Fl_Double_Window*, void*);
  inline void cb_Close_i(Fl_Button*, void*);
  static void cb_Close(Fl_Button*, void*);
public:
  void HandlePopupMenu();
};
#endif

// ======================================================== //
// Of course the code works. It just compiled, didn't it?   //
// --helixcode123, 11/8/2001 on slashdot.                   //
// ======================================================== //


